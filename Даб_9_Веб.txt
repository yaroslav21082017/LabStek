Інтерфейс для відвідувача
class Відвідувач:
    метод відвідати_компанию(компания)
    метод відвідати_департамент(департамент)
    метод відвідати_співробітника(співробітник)
Клас Співробітник
class Співробітник:
    метод __init__(назва_позиції, зарплата)
    метод прийняти_відвідувача(відвідувач)

Клас Департамент
class Департамент:
    метод __init__(співробітники)
    метод прийняти_відвідувача(відвідувач)

Клас Компания
class Компания:
    метод __init__(департаменти)
    метод прийняти_відвідувача(відвідувач)
class ЗарплатнийВідвідувач(Відвідувач):
    метод відвідати_компанию(компания):
        Вивести("Зарплатна відомість для компанії:")
        Для кожного департаменту в компания.департаменти:
            департамент.прийняти_відвідувача(self)
    метод відвідати_департамент(департамент):
        загальна_зарплата = 0
        Для кожного співробітника в департамент.співробітники:
            загальна_зарплата += співробітник.зарплата
        Вивести("Департамент: Загальна зарплата =", загальна_зарплата)
    метод відвідати_співробітника(співробітник):
        Вивести("Співробітник:", співробітник.назва_позиції, ", Зарплата =", співробітник.зарплата)
співробітник1 = Співробітник("Менеджер", 5000)
співробітник2 = Співробітник("Програміст", 6000)
департамент1 = Департамент([співробітник1, співробітник2])
співробітник3 = Співробітник("Аналітик", 5500)
співробітник4 = Співробітник("Дизайнер", 5200)
департамент2 = Департамент([співробітник3, співробітник4])
компания = Компания([департамент1, департамент2])
відвідувач = ЗарплатнийВідвідувач()
компания.прийняти_відвідувача(відвідувач)

Метод відвідати_компанию(компания) відвідувача приймає компанію як параметр і не повертає значення. 
Він використовується для початку обходу компанії та обробки її даних.
Метод відвідати_департамент(департамент) відвідувача приймає департамент як параметр і не повертає значення. 
Використовується для обходу департаменту та обробки інформації про нього.
Метод відвідати_співробітника(співробітник) відвідувача приймає співробітника як параметр і не повертає значення. 
Використовується для обходу та обробки інформації про кожного співробітника.